<?php
    header('Content-Type: text/html; charset=utf-8');
?>

<html>

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Î£®Î©îÏä§ Î≥¥Îìú ÌöåÏõêÍ∞ÄÏûÖ ÏßÑÌñâ</title>
        <link rel="shortcut icon" href="../../favicon/favicon.ico">
    </head>

</html>

<?php
        
    require("../../common/reCAPTCHA/verify_reCAPTCHA_server.php");
    require("../../common/dbconnection.php");
    include('../../common/resource.html');

    $reCAPTCHApass = check_reCAPTCHA();

    if($reCAPTCHApass === true) {

        $userid       = stripslashes(htmlspecialchars($_POST['id']));
        $userpassword = stripslashes(htmlspecialchars($_POST['password']));

        $query = "SELECT * FROM member WHERE id = :idInput";
        $stmt = $db->prepare($query);
        $stmt->bindParam(':idInput', $userid, PDO::PARAM_STR); 
        
        $stmt->execute();

        $userExistence = $stmt->fetchAll();

        if(!empty($userExistence)){

            $userInformation = $userExistence[0];

            // Í≥ÑÏ†ïÏù¥ Ï°¥Ïû¨Ìï®, ÎπÑÎ∞ÄÎ≤àÌò∏Î•º Í≤ÄÏ¶ùÌï¥ÏïºÌï®
            $hashedPassword = $userInformation["password"];

            if($hashedPassword === "redacted") {
                // ÏòÅÍµ¨ Ï†ïÏßÄÎêú Í≥ÑÏ†ï
                // ÏòÅÍµ¨ Ï†ïÏßÄÎêòÎ©¥ Ìï¥ÏãúÎêú Ìå®Ïä§ÏõåÎìúÍ∞Ä ÏûàÏñ¥Ïïº Ìï† ÏûêÎ¶¨ÏóêÎäî "redacted"Î°ú ÎåÄÏ≤¥Îê® (Í¥ÄÎ¶¨ÏûêÍ∞Ä ÏßÄÏ†ïÌï† Ïàò ÏûàÏùå.)
    
                ?>
    
                    <script>
        
                        Swal.fire({
                            icon: 'error',
                            title: 'Î°úÍ∑∏Ïù∏ Î∂àÍ∞Ä',
                            text: 'Í≥ÑÏ†ïÏù¥ ÏòÅÍµ¨ Ï†ïÏßÄÎêòÏóàÏäµÎãàÎã§.',
                            footer: 'Í≥ÑÏ†ï Î≥µÍµ¨ Îì±Ïóê ÎåÄÌïú Î¨∏ÏùòÍ∞Ä ÏûàÏúºÏãúÎ©¥ Í¥ÄÎ¶¨ÏûêÏóêÍ≤å Ïó∞ÎùΩÌïòÏÑ∏Ïöî.'
                        }).then((result) => {
                            location.href = "./login.php";
                        })
        
                    </script>
    
                <?php

            }

            $passwordVerification = password_verify($userpassword, $hashedPassword);

            if($passwordVerification === true){

                // Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ Í¥ÄÎ†® Ï†ïÎ≥¥Î•º member ÌÖåÏù¥Î∏îÏóê Í∏∞Î°ù
                $loginTime = date("Y-m-d H:i:s");
                $loginIP   = $_SERVER['REMOTE_ADDR'];

                $query = "UPDATE member SET lastLoginTime = :loginTime, lastLoginIP = :loginIP WHERE id = :userID";
                $stmt = $db->prepare($query);
                $stmt->bindParam(':loginTime', $loginTime, PDO::PARAM_STR); 
                $stmt->bindParam(':loginIP', $loginIP, PDO::PARAM_STR); 
                $stmt->bindParam(':userID', $userInformation['id'], PDO::PARAM_STR); 

                $stmt->execute();

                // Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ, ÏÑ∏ÏÖòÏóê Í≥ÑÏ†ï Ï†ïÎ≥¥ Ï†ÄÏû•
                session_start();
                $_SESSION['id'] = $userInformation['id'];
                $_SESSION['nickname'] = $userInformation['nickname'];
                $_SESSION['role'] = $userInformation['role'];

                ?> 

                    <script>

                        Swal.fire({
                            title: 'Î∞òÍ∞ëÏäµÎãàÎã§!üëã',
                            html: 'Í≥ß Î©îÏù∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥ÎèôÌï©ÎãàÎã§.',
                            timer: 2000,
                            timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading()
                            }
                        }).then((result) => {
                            if (result.dismiss === Swal.DismissReason.timer) {
                                location.href = "../../index.php";
                            } else {
                                location.href = "../../index.php";
                            }
                        })
                
                    </script>

                <?php

            } else {

                    // ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÌãÄÎ¶∞ Í≤ΩÏö∞.

                    ?>

                    <script>

                        Swal.fire({
                            icon: 'question',
                            title: 'ÎàÑÍµ¨ÏÑ∏Ïöî?',
                            text: 'ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÌãÄÎ†∏ÏäµÎãàÎã§.',
                            footer: 'Îã®ÏßÄ Ïã§ÏàòÏòÄÍ∏∞Î•º Î∞îÎûçÎãàÎã§.'
                        }).then((result) => {
                            location.href = "./login.php";
                        })

                    </script>

                <?php

            }

        } else {

            // Î°úÍ∑∏Ïù∏ Ï†ïÎ≥¥Í∞Ä ÏûòÎ™ªÎê® ÏóÜÎäî Í≥ÑÏ†ïÏù¥Í±∞ÎÇò, IDÎÇò ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏûòÎ™ªÎê®.

            ?>

                <script>

                    Swal.fire({
                        icon: 'error',
                        title: 'ÏûòÎ™ªÎêú Ï†ïÎ≥¥',
                        text: 'Î°úÍ∑∏Ïù∏ Ï†ïÎ≥¥Í∞Ä ÏóÜÍ±∞ÎÇò ÏûòÎ™ªÎêòÏóàÏäµÎãàÎã§.'
                    }).then((result) => {
                        location.href = "./login.php";
                    })

                </script>

            <?php

        }

    } else {

        ?>

            <script>
                
                // reCAPTCHA Ïù∏Ï¶ùÏóê Ïã§Ìå®Ìï®
                Swal.fire({
                    icon: 'error',
                    title: 'Are you a robot?',
                    footer: 'reCAPTCHAÎ•º ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÌÜµÍ≥ºÌïòÏÖîÏïº Ìï¥Ïöî!'
                }).then((result) => {
                    location.href = "./login.php";
                })

            </script>

        <?php

    }

?>